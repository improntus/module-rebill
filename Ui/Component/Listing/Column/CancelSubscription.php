<?php
/**
 * @author Improntus Dev Team
 * @copyright Copyright (c) 2022 Improntus (http://www.improntus.com/)
 * @package Improntus_Rebill
 */

namespace Improntus\Rebill\Ui\Component\Listing\Column;

use Improntus\Rebill\Model\Entity\Subscription\Model as EntitySubscription;
use Magento\Framework\UrlInterface;
use Magento\Framework\View\Element\UiComponent\ContextInterface;
use Magento\Framework\View\Element\UiComponentFactory;
use Magento\Ui\Component\Listing\Columns\Column;
use Magento\Framework\App\ObjectManager;
use Magento\Framework\Escaper;

/**
 * Class to build edit and delete link for each item.
 */
class CancelSubscription extends Column
{
    /**
     * Url path
     */
    public const URL_PATH_DELETE = 'rebill/subscription/cancel';

    /**
     * @var UrlInterface
     */
    protected $urlBuilder;

    /**
     * @var Escaper
     */
    private $escaper;

    /**
     * @param ContextInterface $context
     * @param UiComponentFactory $uiComponentFactory
     * @param UrlInterface $urlBuilder
     * @param array $components
     * @param array $data
     */
    public function __construct(
        ContextInterface   $context,
        UiComponentFactory $uiComponentFactory,
        UrlInterface       $urlBuilder,
        array              $components = [],
        array              $data = []
    ) {
        $this->urlBuilder = $urlBuilder;
        parent::__construct($context, $uiComponentFactory, $components, $data);
    }

    /**
     * @inheritDoc
     */
    public function prepareDataSource(array $dataSource)
    {
        if (isset($dataSource['data']['items'])) {
            foreach ($dataSource['data']['items'] as & $item) {
                if ((!isset($item['rebill_id'])) || (!$this->canCancel($item))) {
                    /**
                     * La suscripciÃ³n no tiene id, o no esta en condiciones de ser cancelado, lo salteo.
                     */
                    continue;
                }

                $title = $this->getEscaper()->escapeHtmlAttr($item['title']);
                $item[$this->getData('name')] = [
                    'delete' => [
                        'href'    => $this->urlBuilder->getUrl(
                            static::URL_PATH_DELETE,
                            [
                                'user_email' => $item['user_email'],
                                'rebill_id'  => $item['rebill_id'],
                            ]
                        ),
                        'label'   => __('Cancel'),
                        'confirm' => [
                            'title'   => __('Cancel'),
                            'message' => __('Are you sure you want to cancel a subscription?'),
                        ],
                        'post'    => true,
                    ],
                ];
            }
        }

        return $dataSource;
    }

    /**
     * @param array $item
     * @return bool
     */
    public function canCancel(array $item): bool
    {
        return EntitySubscription::canCancelSubscription($item['status']);
    }

    /**
     * @return Escaper|mixed
     */
    private function getEscaper()
    {
        if (!$this->escaper) {
            // phpcs:ignore Magento2.PHP.AutogeneratedClassNotInConstructor
            $this->escaper = ObjectManager::getInstance()->get(Escaper::class);
        }
        return $this->escaper;
    }
}
